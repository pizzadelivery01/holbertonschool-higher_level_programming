''1-my_list'' module
======================

using ''MyList'''
----------------------

importing the function from module
	  >>>MyList = __import__("1-my_list").MyList

check for module docstring:
      >>> m = __import__("1-my_list").__doc__
      >>> len(m) > 1
      True

check for class docstring:
      >>> c = __import__("1-my_list").MyList.__doc__
      >>> len(c) > 1
      True

check for method docstring:
      >>> mod = __import__("1-my_list").MLlist.print_sorted.__doc__
      >>> len(mod) > 1
      True

check that MyList inherits for list:
      >>> issubclass(MyList, list)
      True

check for empty list:
      >>> lis = MyList()
      >>> lis.print_sorted()
      []

check that appedning works:
      >>> lis.append(1)
      >>> lis.append(2)
      >>> lis.append(3)
      >>> lis.append(4)
      >>> print(lis)
      [1, 2, 3, 4]

check for list in correct order:
      >>>lis.print_sorted()
      [1, 2, 3, 4]

checking for reversed order:
	 >>> l = MyList()
    	 >>> l.append(4)
      	 >>> l.append(3)
         >>> l.append(2)
       	 >>> l.append(1)
	 >>> print(l)
	 [4, 3, 2, 1]
	 >>> l.print_sorted()
	 [1, 2, 3, 4]
	 >>> print(lis)
	 [4, 3, 2, 1]

check for negative number:
      >>> lis = MyList()
      >>> lis.append(-5)
      >>> lis.append(5)
      >>> print(lis)
      [4, 3, 2, 1, -5, 5]
      >>> lis.print_sorted()
      [-5, 1, 2, 3, 4, 5]
      >>> pint(lis)
      [4, 3, 2, 1, -5, 5]

check for all neg numbers:
      >>> lis = Mylist()
      >>> lis.append(-2)
      >>> lis.append(-4)
      >>> lis.append(-6)
      >>> lis.append(-10)
      >>> lis.append(-8)
      >>> print(lis)
      [-2, -4, -6, -10, -8]
      >>>lis.print_sorted()
      [-10, -8, -6, -4, -2]
      >>> print(lis)
      [-2, -8, -6, -10, -8]

check for too many arguments:
      >>> lis.print_sorted(lis)
      Traceback (most recent call last):
      ...
      TypeError: print_sorted() takes 1 positional argument but 2 were giv
